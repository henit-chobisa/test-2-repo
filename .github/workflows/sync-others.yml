name: Auto Merge or Create PR on Push

on:
  workflow_dispatch:
  push:
    branches:
      - "sync/**"

jobs:
  Auto_Merge:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Setup Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Setup GH CLI and Git Config
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      - name: Check if current branch matches the secret
        id: check-branch
        env:
          CURRENT_BRANCH: ${{ github.ref_name }}
          SOURCE_BRANCH: ${{ secrets.SYNC_TARGET_BRANCH_NAME }}
        run: |
          if [ "$CURRENT_BRANCH" = "$SOURCE_BRANCH" ]; then
            echo "MATCH=true" >> $GITHUB_ENV
          else
            echo "MATCH=false" >> $GITHUB_ENV
          fi

      - name: Check for merge conflicts
        if: env.MATCH == 'true'
        env: 
          SOURCE_BRANCH: ${{ secrets.SYNC_TARGET_BRANCH_NAME }} # Sync branch such as "sync/ce"
          TARGET_BRANCH: ${{ secrets.TARGET_BRANCH }} # Base branch such as "develop"
        run: |
          git fetch origin "$TARGET_BRANCH"
          git checkout "$TARGET_BRANCH"
          if git merge --no-commit --no-ff "$SOURCE_BRANCH"; then
            echo "No merge conflicts detected."
            echo "HAS_CONFLICTS=false" >> $GITHUB_ENV
          else
            echo "Merge conflicts detected."
            echo "HAS_CONFLICTS=true" >> $GITHUB_ENV
            git merge --abort

      - name: Merge Change to Target Branch
        if: env.MATCH == 'true' && env.HAS_CONFLICTS == 'false'
        run: |
          git commit -m "Merge branch '${{ secrets.SYNC_TARGET_BRANCH_NAME }}' into ${{ secrets.TARGET_BRANCH }}"
          git push origin ${{ secrets.TARGET_BRANCH }}

      - name: Create PR to Target Branch
        if: env.MATCH == 'true' && env.HAS_CONFLICTS == 'true'
        run: |
          PR_URL=$(gh pr create --base ${{ secrets.TARGET_BRANCH }} --head ${{ secrets.SYNC_TARGET_BRANCH_NAME }} --title "sync: merge conflicts need to be resolved" --body "")
          echo "Pull Request created: $PR_URL"

