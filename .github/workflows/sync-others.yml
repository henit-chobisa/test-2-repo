name: Auto Merge or Create PR on Push

on:
  workflow_dispatch:
  push:
    branches:
      - "sync/ce"

jobs:
  merge_or_create_pr:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0 # Fetch all history for all branches and tags

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Setup GH CLI
        run: |
          type -p curl >/dev/null || (sudo apt update && sudo apt install curl -y)
          curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
          sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
          sudo apt update
          sudo apt install gh -y

      - name: Check for merge conflicts
        id: conflicts
        run: |
          git fetch origin ${{ github.event.repository.default_branch }}
          git checkout ${{ github.event.repository.default_branch }}
          # Attempt to merge the main branch into the current branch
          if git merge --no-commit --no-ff sync/ce; then
            echo "No merge conflicts detected."
            echo "HAS_CONFLICTS=false" >> $GITHUB_ENV
          else
            echo "Merge conflicts detected."
            echo "HAS_CONFLICTS=true" >> $GITHUB_ENV
            git merge --abort
          fi
          
      - name: Merge Change to Develop
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        if: env.HAS_CONFLICTS == 'false'
        run: |
            # Create a merge commit
            git commit -m "Merge branch '${{ secrets.SYNC_TARGET_BRANCH_NAME }}' into ${{ github.event.repository.default_branch }}"
            # Push the merge commit
            git push origin ${{ github.event.repository.default_branch }}

      - name: Create PR to Develop
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        if: env.HAS_CONFLICTS == 'true'
        run: |
            PR_URL=$(gh pr create --base ${{ github.event.repository.default_branch }} --head ${{ secrets.SYNC_TARGET_BRANCH_NAME }} --title "sync: merge conflicts need to be resolved" --body "")
            echo "Pull Request created: $PR_URL"
